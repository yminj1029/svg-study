<svg version="1.1"
     width="300" height="200"
     xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="red" />

  <circle cx="150" cy="100" r="80" fill="green" />

  <text x="150" y="125" font-size="60" text-anchor="middle" fill="white">SVG</text>

</svg>

<!--
    SVG Root
    1. DTD(Document Type Definition)로는 SVG를 구분하지 않습니다.
    2. SVG 2 이전에는 version을 반드시 써야했으나 SVG 2에서는 더이상 사용하지 않습니다.
    3. namesapces를 정확하게 bind하는 것이 필요합니다.
    -배경 : XML dialect와 svg 구분을 어떻게 할 것인지 확인이 필요합니다. 
            예를 들면 <title></title> element가 XHTML과 SVG에 동시에 들어있을 때 구분을 어떻게 해야할까요?
    -namespaces 선언하기 : SVG 루트 elements에 xmlns parameter를 사용하여 svg선언합니다 
    -참고 : https://developer.mozilla.org/en-US/docs/Web/SVG/Namespaces_Crash_Course
-->

<!-- 
    SVG 기본 속성
    1. 렌더링 순서 : 위에서부터 아래로. 나중인 element가 이전 element의 위로 올라옵니다. 
    2. 여러 methods를 통해 HTML파일에 삽입 가능합니다.
        - application/xhtml+xml 사용합니다.
        - img element를 사용할 수 있습니다.
        - <object data="image.svg" type="image/svg+xml"></object>
        - <iframe src="image.svg"></iframe>
        - 자바스크립트로 동적으로 생성 가능 합니다
 -->

<!-- 
   SVG 파일 타입
   1. .svg : 간단한 svg 마크업을 포함한 파일 타입
   2.  gzip-compressed SVG files ".svgz" : svg 파일 크기 문제로 gzip으로 압축합니다.
       안정적인 작동이 안될 수 있습니다. gzip으로 압축된 svg 처리 가능한 웹 서버에만 사용하세요
 -->

<!-- 
    웹서버 올리기 : HTTP 헤더에 추가해야하는 내용입니다.
    1. for .svg
        Content-Type: image/svg+xml
        Vary: Accept-Encoding
    2. for gzip compressed svg files
        Content-Type: image/svg+xml
        Content-Encoding: gzip
        Vary: Accept-Encoding
 -->
